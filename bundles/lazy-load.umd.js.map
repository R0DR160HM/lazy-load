{"version":3,"file":"lazy-load.umd.js","sources":["ng://lazy-load/lib/requests/LazyLoader.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\n\r\nexport class CallResponse<T> {\r\n  oldValue: T;\r\n  currentValue: T;\r\n  requestResponse: unknown;\r\n}\r\n\r\nexport class LazyLoader<T> {\r\n\r\n  // tslint:disable: variable-name\r\n  private _value: T;\r\n\r\n  private _timesCalled = 0;\r\n  private _isCalling = false;\r\n\r\n  private _path: any[];\r\n  private _origin: Observable<any> | Promise<any>;\r\n\r\n  /**\r\n   * @optional @param value Optional initial value for the LazyLoader\r\n   */\r\n  constructor(value?: T) {\r\n    this._value = value;\r\n  }\r\n\r\n  /**\r\n   * @description Train a LazyLoader so it is not necessary to pass the origin and path on each call\r\n   * @optional @param origin Observable or Promise where the information will be taken from\r\n   * @optional @param path Indicates the position of the desired information within the result\r\n   * @returns An trained LazyLoader\r\n   */\r\n  public train(origin?: Promise<any> | Observable<any>, ...path: (string | number | symbol)[]) {\r\n    this._path = path;\r\n    this._origin = origin;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @description Indicates whether a call is currently taking place\r\n   */\r\n  public get isCalling() {\r\n    return this._isCalling;\r\n  }\r\n\r\n  /**\r\n   * @description Indicates whether LazyLoader was called once\r\n   */\r\n  public get isCalled() {\r\n    return this._timesCalled > 0;\r\n  }\r\n\r\n  /**\r\n   * @description Indicates whether the value of LazyLoader is valid\r\n   */\r\n  public get isValid() {\r\n    return this._timesCalled > 0 && this._value !== null && this._value !== undefined;\r\n  }\r\n\r\n  /**\r\n   * @description Current value of the LazyLoader, result of the .call()\r\n   */\r\n  public get value() {\r\n    return this._value;\r\n  }\r\n\r\n  /**\r\n   * @description Indicates how much times the .call() was successfully executed\r\n   */\r\n  public get timesCalled() {\r\n    return this._timesCalled;\r\n  }\r\n\r\n  public setValue(value: T) {\r\n    this._value = value;\r\n  }\r\n\r\n  /**\r\n   * @description Does an asynchronous call to get the value\r\n   * @optional @param origin Observable or Promise where the information will be taken from\r\n   * @optional @param path Indicates the position of the desired information within the result\r\n   * @returns An Promise<CallResponse<T>> at the and of the call\r\n   * @example .call(this.service.fetch(), 'records', 0) // will return the first element of an asyncronous call that returns an object with an array called records\r\n   */\r\n  public call(origin?: Promise<any> | Observable<any>, ...path: (string | number | symbol)[]): Promise<CallResponse<T>> {\r\n    if (this._path && !path) {\r\n      path = this._path;\r\n    }\r\n    if (this._origin && !origin) {\r\n      origin = this._origin;\r\n    }\r\n    const oldValue = this._value;\r\n    this._isCalling = true;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      path = path || [];\r\n      if (origin instanceof Promise) {\r\n        origin.then(result => this._resolve(result, path, resolve, oldValue))\r\n        .catch(err => reject(err));\r\n      } else {\r\n        origin.subscribe(result => this._resolve(result, path, resolve, oldValue),\r\n        err => reject(err));\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * @description Clears all content so it can be reloaded from scratch without creating a new memory variable\r\n   */\r\n  public clear() {\r\n    this._value = undefined;\r\n    this._timesCalled = 0;\r\n  }\r\n\r\n  private _callbackResult(data: any, path: any[]) {\r\n    let finalData = data;\r\n    if (path.length > 0) {\r\n      path.forEach(key => finalData = finalData[key]);\r\n    }\r\n    this._value = finalData;\r\n  }\r\n\r\n  private _resolve(result: any, path: any[], resolve: any, oldValue: T) {\r\n    this._callbackResult(result, path);\r\n    this._isCalling = false;\r\n    this._timesCalled++;\r\n    resolve({ oldValue, currentValue: this._value, requestResponse: result });\r\n  }\r\n\r\n}\r\n"],"names":[],"mappings":"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"}